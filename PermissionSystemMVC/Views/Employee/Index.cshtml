@model IEnumerable<PermissionSystemMVC.Models.Request>

@{
    ViewData["Title"] = "Employee Index";
}

<div class="row">
    <div class="col-10">
        <h2>Requests</h2>
        <p>Requests dashboard in this month</p>
    </div>
</div>

<br />
<div class="card-columns">
    <div class="card" style="min-height:125px">
        <div class="card-body">
            <h5 class="card-title">Total Request Time</h5>
            <p id="TotalRequestHours" class="card-text"> </p>
        </div>
    </div>
    <div class="card" style="min-height:125px">
        <div class="card-body">
            <h5 class="card-title">Requests</h5>
            <p id="oldRequestsDiv" class="card-text"> </p>
        </div>
    </div>
    <div class="card" style="min-height:125px">
        <div class="card-body">
            <h5 class="card-title">Status of Reqests</h5>
            <p  class="card-text">Statues Requests for Personal Requests </p>

            <span id="Approved" class="alignleft"></span>
            <span id="Rejected" class="aligncenter"></span>
            <span id="New" class="alignright"></span>
        </div>
    </div>
</div>
<hr />
<h5>Request in this month: </h5>
<br />
@if (Model == null)
{
    <span> NO Data !</span>
}
else
{
    <table id="data-table" class="table table-hover" display nowrap width="100%">
        <thead>
            <tr>
                <th>Prmisssion </th>
                <th>Date Prmission</th>
                <th>From Time</th>
                <th>To Time</th>
                <th>Create Date</th>
                <th>Status</th>
                <th>Cancel</th>
            </tr>
        </thead>

    </table>
}
@section Scripts {

    <script>
        $(document).ready(function () {
            $.ajax({
                type: "POST",
                url: "Employee/GetRequestsIndex",
                type: 'get',
                dataType: "json",
                success: function (data) {
                    list = data.notCanceled;
                    console.log(list);
                    var totalMinutes = 0;
                    list.forEach(function (value, index, arr) {
                        var minutes = parseInt(value.toTime) - parseInt(value.fromTime);
                        totalMinutes = totalMinutes + minutes;
                    });

                    $('#TotalRequestHours').append('Total time request in this month for personal prmisssion : <b>'
                        + convertTime(totalMinutes) + ' Hours</b>');
                    $('#oldRequestsDiv').append('<p> Total personal Requests  in this month is:  <b>'
                        + data.thisMonth + '</b> </p>');
                    $('#Approved').append('Approved :<b>' + data.approve + '</b>');
                    $('#Rejected').append('Rejected :<b>' + data.rejected + '</b>');
                    $('#New').append('New :<b>' + data.new + '</b>');
                },
                error: function (req, status, error) {
                    console.log(msg);
                }
            });


            var myTable = $("#data-table").DataTable({
                searching: false,
                ordering: false,
                "ajax": {
                    "url": 'Employee/GetRequestsIndex',
                    "type": 'get',
                    "datatype": 'json',

                },
                "columns": [
                    { "data": "prmisssionType" },
                    { "data": "datePrmission" },
                    { "data": "fromTime" },
                    { "data": "toTime" },
                    { "data": "createDate" },
                    { "data": "status" },
                    {
                        "data": null,
                        "render": function (data, type) {
                            if (data.status === "New") {
                                return '<button class="btn btn-danger" onclick="Cancel(' + data.id + ')">Cancel</button>'

                            } else {
                                return '<p class="text-center">----</p>';

                            }
                        }

                    }
                ]
            });

        });

        function Cancel(id) {
            bootbox.confirm({
                size: "small",
                message: "Are you sure to cancel this request?",
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            type: "POST",
                            url: "Employee/CancelRequest",
                            data: { Id: id },
                            dataType: "json",
                            success: function (data) {

                                if (data.resulte) {
                                    toastr.success(data.msg, 'Done');
                                    $('#data-table').DataTable().ajax.reload();
                                }
                                else {
                                    toastr.error(data.msg, 'Error');
                                }
                            },
                            error: function (req, status, error) {
                                alert(error);
                            }
                        });
                    }
                }
            });
        }

        function convertTime(FullTime) {
            var hours = (FullTime / 60);
            var rhours = Math.floor(hours);
            var minutes = (hours - rhours) * 60;
            var rminutes = Math.round(minutes);

            var time = rhours + ":" + rminutes;
            return (time);
        }
    </script>

}
